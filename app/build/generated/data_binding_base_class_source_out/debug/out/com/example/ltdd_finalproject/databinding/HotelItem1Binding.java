// Generated by view binder compiler. Do not edit!
package com.example.ltdd_finalproject.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.ltdd_finalproject.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class HotelItem1Binding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final ImageView imageViewHotel;

  @NonNull
  public final TextView textViewDiaChiHotel;

  @NonNull
  public final TextView textViewHotelName;

  @NonNull
  public final TextView textViewProvinceHotel;

  private HotelItem1Binding(@NonNull CardView rootView, @NonNull ImageView imageViewHotel,
      @NonNull TextView textViewDiaChiHotel, @NonNull TextView textViewHotelName,
      @NonNull TextView textViewProvinceHotel) {
    this.rootView = rootView;
    this.imageViewHotel = imageViewHotel;
    this.textViewDiaChiHotel = textViewDiaChiHotel;
    this.textViewHotelName = textViewHotelName;
    this.textViewProvinceHotel = textViewProvinceHotel;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static HotelItem1Binding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static HotelItem1Binding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.hotel_item1, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static HotelItem1Binding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.imageViewHotel;
      ImageView imageViewHotel = ViewBindings.findChildViewById(rootView, id);
      if (imageViewHotel == null) {
        break missingId;
      }

      id = R.id.textViewDiaChiHotel;
      TextView textViewDiaChiHotel = ViewBindings.findChildViewById(rootView, id);
      if (textViewDiaChiHotel == null) {
        break missingId;
      }

      id = R.id.textViewHotelName;
      TextView textViewHotelName = ViewBindings.findChildViewById(rootView, id);
      if (textViewHotelName == null) {
        break missingId;
      }

      id = R.id.textViewProvinceHotel;
      TextView textViewProvinceHotel = ViewBindings.findChildViewById(rootView, id);
      if (textViewProvinceHotel == null) {
        break missingId;
      }

      return new HotelItem1Binding((CardView) rootView, imageViewHotel, textViewDiaChiHotel,
          textViewHotelName, textViewProvinceHotel);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
